// Code generated by MockGen. DO NOT EDIT.
// Source: ./app/session.go

// Package mock_app is a generated GoMock package.
package sessions

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSession is a mock of Session interface.
type MockSession struct {
	ctrl     *gomock.Controller
	recorder *MockSessionMockRecorder
}

// MockSessionMockRecorder is the mock recorder for MockSession.
type MockSessionMockRecorder struct {
	mock *MockSession
}

// NewMockSession creates a new mock instance.
func NewMockSession(ctrl *gomock.Controller) *MockSession {
	mock := &MockSession{ctrl: ctrl}
	mock.recorder = &MockSessionMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSession) EXPECT() *MockSessionMockRecorder {
	return m.recorder
}

// Clear mocks base method.
func (m *MockSession) Clear() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Clear")
}

// Clear indicates an expected call of Clear.
func (mr *MockSessionMockRecorder) Clear() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Clear", reflect.TypeOf((*MockSession)(nil).Clear))
}

// GetUserId mocks base method.
func (m *MockSession) GetUserId() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserId")
	ret0, _ := ret[0].(int)
	return ret0
}

// GetUserId indicates an expected call of GetUserId.
func (mr *MockSessionMockRecorder) GetUserId() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserId", reflect.TypeOf((*MockSession)(nil).GetUserId))
}

// HasUserId mocks base method.
func (m *MockSession) HasUserId() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HasUserId")
	ret0, _ := ret[0].(bool)
	return ret0
}

// HasUserId indicates an expected call of HasUserId.
func (mr *MockSessionMockRecorder) HasUserId() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HasUserId", reflect.TypeOf((*MockSession)(nil).HasUserId))
}

// SetUserId mocks base method.
func (m *MockSession) SetUserId(arg0 int) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetUserId", arg0)
}

// SetUserId indicates an expected call of SetUserId.
func (mr *MockSessionMockRecorder) SetUserId(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetUserId", reflect.TypeOf((*MockSession)(nil).SetUserId), arg0)
}
