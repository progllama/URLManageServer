// Code generated by MockGen. DO NOT EDIT.
// Source: ./app/session/session_factory.go

// Package mock_session is a generated GoMock package.
package session

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
)

// MockSessionFactory is a mock of SessionFactory interface.
type MockSessionFactory struct {
	ctrl     *gomock.Controller
	recorder *MockSessionFactoryMockRecorder
}

// MockSessionFactoryMockRecorder is the mock recorder for MockSessionFactory.
type MockSessionFactoryMockRecorder struct {
	mock *MockSessionFactory
}

// NewMockSessionFactory creates a new mock instance.
func NewMockSessionFactory(ctrl *gomock.Controller) *MockSessionFactory {
	mock := &MockSessionFactory{ctrl: ctrl}
	mock.recorder = &MockSessionFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSessionFactory) EXPECT() *MockSessionFactoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockSessionFactory) Create(c *gin.Context) Session {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", c)
	ret0, _ := ret[0].(Session)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockSessionFactoryMockRecorder) Create(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockSessionFactory)(nil).Create), c)
}
